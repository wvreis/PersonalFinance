@using PersonalFinance.Helpers.APIs;
@using PersonalFinance.Helpers;
@using PersonalFinance.Helpers.Routes;
@using PersonalFinance.Models;
@attribute [
    Route(AccountsRoutes.Index)
]
@inherits General

@if (Loading) {
    <p>Carregando...</p>
}
else {
    <header>Minhas Contas</header>

    <a href="@AccountsRoutes.GoToAddition()">
        <RadzenButton Text="Adicionar" Icon="add" Class="rz-mt-8 rz-mb-4" />
    </a>

    <RadzenDataGrid       
        PageSize="25" 
        AllowPaging="false" 
        PagerHorizontalAlign="HorizontalAlign.Left" 
        ShowPagingSummary="false"
        Data="@Accounts" 
        TItem="Account" 
        ColumnWidth="300px" 
        LogicalFilterOperator="LogicalFilterOperator.Or">
        
        <Columns>
            <RadzenDataGridColumn TItem="Account" Property="Account.Id" Title="#" Frozen="true" Width="80px" TextAlign="TextAlign.Center" CssClass=“font-weight-bold” />
            <RadzenDataGridColumn TItem="Account" Property="Account.Name" Title="Nome" Frozen="true" Width="160px" />
            <RadzenDataGridColumn TItem="Account" Property="Account.Bank.Number" Title="Nº Banco" Width="80px"/>
            <RadzenDataGridColumn TItem="Account" Property="Account.Bank.Name" Title="Banco" Width="160px" />
            <RadzenDataGridColumn TItem="Account" Property="" Title="" Width="160px" TextAlign="TextAlign.End">
                <Template Context="account">
                    <a href="@AccountsRoutes.GoToEdition(account.Id)">
                        <RadzenButton Text="Editar"/>
                    </a>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

<style>

</style>

@code{
    List<Account> Accounts { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Accounts = await AccountsAPI.GetSearch();
    }

    #region VALIDATIONS
    bool Loading => Accounts is null;
    #endregion
}
