@using PersonalFinance.Helpers.APIs;
@using PersonalFinance.Helpers;
@using PersonalFinance.Helpers.Routes;
@using PersonalFinance.Models;
@using System.Linq.Expressions;
@attribute [
    Route(TransactionsRoutes.Index)
]
@inherits General

@if (Loading) {
    <div class="rz-m-12">
        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
    </div>
}
else {
    <RadzenText TextStyle="TextStyle.DisplayH4" class="rz-m-6">
        Movimentações
    </RadzenText>    

    <RadzenRow Gap="1rem" Class="rz-mt-8 rz-mb-4" Style="width: 100%" JustifyContent="JustifyContent.SpaceEvenly">
        <RadzenColumn Size="10">
            <RadzenTextBox 
                Placeholder="Pesquisar por..."
                Style="width: 100%"
                @bind-Value="@SearchInfo"/>                   
        </RadzenColumn>

        <RadzenColumn>
            <RadzenButton 
                Icon="search"
                Style="width: 100%"
                Click="(() => Search(SearchInfo))"/>
        </RadzenColumn>

        <RadzenColumn>
            <RadzenButton 
                Icon="history"
                Style="width: 100%"
                Click="(() => ResetSearch())" />
        </RadzenColumn>

        <RadzenColumn>
            <RadzenButton 
                Icon="add"
                Style="width: 100%"
                Click="NavigateToAddition"/>
        </RadzenColumn>
    </RadzenRow>

    <RadzenDataGrid       
        PageSize="25" 
        AllowPaging="false" 
        PagerHorizontalAlign="HorizontalAlign.Left" 
        ShowPagingSummary="false"
        Data="@Transactions" 
        TItem="Transaction" 
        ColumnWidth="300px" 
        LogicalFilterOperator="LogicalFilterOperator.Or"
        EmptyText="Não há registros a serem listados.">
        
        <Columns>
            <RadzenDataGridColumn 
                TItem="Transaction"
                Property="@(ObjectHelper.GetFullName<Transaction, int>(x => x.Id))"
                Title="#" 
                Frozen="true" 
                Width="40px" 
                TextAlign="TextAlign.Center" 
                CssClass=“font-weight-bold” />
            
            <RadzenDataGridColumn 
                TItem="Transaction"
                Property="@(ObjectHelper.GetFullName<Transaction, string>(x => x.Description))"
                Title="Descrição" 
                Frozen="true" 
                Width="250px" />
            
            <RadzenDataGridColumn 
                TItem="Transaction" 
                Property="@(ObjectHelper.GetFullName<Transaction, double>(x => x.Amount))" 
                Title="Valor"
                Width="120px">

                <Template Context="detail">
                    @String.Format(new System.Globalization.CultureInfo("pt-BR"), "{0:C}", detail.Amount)
                </Template>

            </RadzenDataGridColumn>
            
            <RadzenDataGridColumn 
                TItem="Transaction"
                Property="@(ObjectHelper.GetFullName<Transaction, DateOnly>(x => x.Date))"
                Title="Data" 
                Width="160px" />

            <RadzenDataGridColumn 
                TItem="Transaction"
                Property="@(ObjectHelper.GetFullName<Transaction, string>(x => x.Account.Description))"
                Title="Conta" 
                Width="160px" />

            <RadzenDataGridColumn 
                TItem="Transaction"
                Property="@(ObjectHelper.GetFullName<Transaction, string>(x => x.Account.Description))"
                Title="Situação" 
                Width="160px">
                
                <Template Context="transaction">
                    <RadzenBadge 
                        BadgeStyle="@((BadgeStyle)transaction.StatusDictionary.First(x => x.Key == transaction.Status).Value.style)"
                        Text="@(transaction.StatusDictionary.First(x => x.Key == transaction.Status).Value.text)" />
                </Template>
            
            </RadzenDataGridColumn>
            
            <RadzenDataGridColumn 
                TItem="Transaction" 
                Property="" 
                Title="" 
                Width="160px" 
                TextAlign="TextAlign.End">

                <Template Context="transaction">
                    <a href="@TransactionsRoutes.GoToEdition(transaction.Id)">
                        <RadzenButton Text="Editar"/>
                    </a>
                </Template>

            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

@code {
    List<Transaction> Transactions { get; set; }
    string SearchInfo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try {
            await Search();
        }
        catch (Exception ex) {

            await ErrorMsg(ex);
        }
    }

    async Task Search(string searchInfo = null)
    {
        Transactions = await TransactionsAPI.GetSearch(searchInfo);
    }

    async Task ResetSearch()
    {
        SearchInfo = null;
        await Search();
    }

    void NavigateToAddition()
    {
        NavigationManager.NavigateTo(TransactionsRoutes.GoToAddition());
    }

    #region VALIDATION
    bool Loading => Transactions is null;
    #endregion
}
